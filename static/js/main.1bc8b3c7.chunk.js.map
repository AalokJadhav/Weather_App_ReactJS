{"version":3,"sources":["assets/footer_logo.png","Components/Footer.jsx","Components/WeatherApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["Footer","year","Date","getFullYear","className","style","float","paddingLeft","src","footer_image","height","paddingBottom","alt","color","target","rel","href","paddingRight","WeatherApp","useState","city","setCity","search","setSearch","useEffect","fetchApi","a","url","fetch","response","json","resJson","console","log","main","placeholder","type","value","onChange","event","temp","temp_min","temp_max","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAAe,G,iBAAA,IAA0B,yC,OCgC1BA,EA1BA,WACX,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACI,mCAMI,yBAAQC,UAAU,SAAlB,UACI,sBAAMA,UAAU,cAAcC,MAAO,CAAEC,MAAO,OAAQC,YAAa,MAAnE,SACI,qBAAKC,IAAKC,EAAcJ,MAAO,CAAEK,OAAQ,OAAQC,cAAe,MAAQC,IAAI,OAEhF,sBAAKR,UAAU,oBAAf,uBACc,sBAAMC,MAAO,CAAEQ,MAAO,OAAtB,0BADd,cAEI,oBAAGT,UAAU,cAAeU,OAAQ,SAASC,IAAI,aAAaC,KAAK,iCAAnE,UACK,IADL,iBAIA,uBAAMZ,UAAU,cAAcC,MAAO,CAAEC,MAAO,QAASW,aAAc,OAArE,mBAAkFhB,EAAlF,sC,8BC+BLiB,EArDI,WAEf,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,qBAA5B,mBAAOG,EAAP,KAAeC,EAAf,KAeA,OAbAC,qBAAU,WACN,IAAMC,EAAQ,uCAAG,gCAAAC,EAAA,6DACPC,EADO,2DACmDL,EADnD,iEAEUM,MAAMD,GAFhB,cAEPE,EAFO,gBAISA,EAASC,OAJlB,OAIPC,EAJO,OAKbC,QAAQC,IAAIF,GACZV,EAAQU,EAAQG,MANH,2CAAH,qDASdT,MACD,CAACH,IAIA,mCACI,sBAAKlB,UAAU,MAAf,UACI,qBAAKA,UAAU,YAAf,SACI,uBACI+B,YAAY,oBACZC,KAAK,SACLC,MAAOf,EACPlB,UAAU,aACVkC,SAAU,SAACC,GACPhB,EAAUgB,EAAMzB,OAAOuB,YAGjCjB,EACF,gCACA,sBAAKhB,UAAU,OAAf,UACI,qBAAIA,UAAU,YAAd,UACI,mBAAGA,UAAU,qBAAqBC,MAAO,CAACQ,MAAO,aADrD,OAC4ES,KAE5E,qBAAIlB,UAAU,OAAd,UACKgB,EAAKoB,KADV,aAGA,qBAAIpC,UAAU,cAAd,iBAAiCgB,EAAKqB,SAAtC,mBAA6DrB,EAAKsB,SAAlE,gBAEJ,qBAAKtC,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,mBAbJ,mBAAGA,UAAU,WAAb,oCClBZuC,MAZf,WACE,OACM,qCAEA,oBAAIvC,UAAU,UAAd,qCACA,uBAAM,uBACN,cAAC,EAAD,IACA,cAAC,EAAD,QCAOwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1bc8b3c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/footer_logo.bcea899f.png\";","import React from 'react';\r\nimport './css/style.css';\r\nimport footer_image from '../assets/footer_logo.png';\r\n\r\n\r\n\r\nconst Footer = () => {\r\n    const year = new Date().getFullYear();\r\n    return (\r\n        <>\r\n            {/* <footer className=\"footer\">\r\n              <p style={{textAlign:'left', paddingLeft: '100px', paddingTop: '1%'}}> © 2021  | All rights Reserved | Terms and conditions\r\n              <span style={{float:'right', paddingRight: '100px'}}>Made with <span style={{color:'red'}}>❤</span> by Alok Jadhav</span>\r\n              </p>\r\n          </footer> */}\r\n            <footer className='footer'>\r\n                <span className=\"footer_span\" style={{ float: 'left', paddingLeft: '8%' }}>\r\n                    <img src={footer_image} style={{ height: \"35px\", paddingBottom: '1%' }} alt=\"\" />\r\n                </span>\r\n                <div className='footer__copyright'>\r\n                    Made with <span style={{ color: 'red' }}>❤️</span>&nbsp; by&nbsp;\r\n                    <a className='footer_link'  target =\"_blank\" rel=\"noreferrer\" href='https://github.com/AalokJadhav'>\r\n                        {' '}\r\n                        Alok Jadhav\r\n                    </a>\r\n                    <span className=\"footer_span\" style={{ float: 'right', paddingRight: '10%' }}> © {year} | All rights reserved.</span>\r\n                </div>\r\n            </footer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Footer; ","import React, { useEffect, useState } from 'react';\r\nimport './css/style.css';\r\n\r\nconst WeatherApp = () => {\r\n\r\n    const [city, setCity] = useState(null);\r\n    const [search, setSearch] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            const url = `http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=ed1e00e80be4245950828394a0ebada3`;\r\n            const response = await fetch(url);\r\n            // console.log(response);\r\n            const resJson = await response.json();\r\n            console.log(resJson);\r\n            setCity(resJson.main)\r\n        }\r\n\r\n        fetchApi();\r\n    }, [search])\r\n\r\n    return (\r\n\r\n        <>\r\n            <div className=\"box\">\r\n                <div className=\"inputData\">\r\n                    <input\r\n                        placeholder='Enter Your City..'\r\n                        type=\"search\"\r\n                        value={search}\r\n                        className=\"inputField\"\r\n                        onChange={(event) => {\r\n                            setSearch(event.target.value);\r\n                        }} />\r\n                </div>\r\n                {!city ? ( <p className=\"errorMsg\">No Data Found..!</p> ) : (\r\n                <div>\r\n                <div className=\"info\">\r\n                    <h2 className=\"location \">\r\n                        <i className=\"fas fa-street-view\" style={{color: 'magenta'}}></i>&nbsp;{search}\r\n                    </h2>\r\n                    <h1 className=\"temp\">\r\n                        {city.temp}°Cel\r\n                    </h1>\r\n                    <h3 className=\"tempmin_max\">Min {city.temp_min}°Cel   | Max {city.temp_max}°Cel</h3>\r\n                </div>\r\n                <div className=\"wave -one\"></div>\r\n                <div className=\"wave -two\"></div>\r\n                <div className=\"wave -three\"></div>\r\n                </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherApp;","import './App.css';\nimport Footer from './Components/Footer';\n// import Navbar from './Components/Navbar';\nimport WeatherApp from './Components/WeatherApp';\n\nfunction App() {\n  return (\n        <>\n        {/* <Navbar /> */}\n        <h1 className=\"heading\">Welcome to Weather App </h1>\n        <br /><br />\n        <WeatherApp />\n        <Footer />\n        </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}